{"version":3,"file":"static/js/598.2d4dde8c.chunk.js","mappings":"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","sources":["lib/fstream.js","lib/huffman.js","lib/parse_block.js","lib/inflate.js","lib/gzip_analyze.worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import bigInt from 'big-integer'\nconst fstream = {\n    data:new Uint8Array(0),\n    headAddr:0,\n    headByte:0,\n    headByteRemainBits:0,\n    init:function(data){\n        console.log(data)\n        this.data = new Uint8Array(data)\n        this.reset()\n    },\n    reset:function(){\n        this.headAddr = 0\n        this.headByte = this.data[0]\n        this.headByteRemainBits = 8\n    },\n    eof:function(){\n        if(this.headByteRemainBits === 0){\n            return this.headAddr + 1 >= this.data.length\n        } else {\n            return this.headAddr >= this.data.length\n        }\n    },\n    bitsMask:[0, 0x1, 0x3, 0x7, 0xf, 0x1f, 0x3f, 0x7f, 0xff],\n    getBigIntOf:function(bits){\n        let bigIntResult = bigInt(0)\n        if(bits <= this.headByteRemainBits){\n            // 剩余 headByte 部分即可满足\n            bigIntResult = bigInt(this.headByte & this.bitsMask[bits])\n            this.headByteRemainBits -= bits\n            this.headByte = (this.headByte >> bits)\n            return bigIntResult\n        } else {\n            let loadBits = bits\n            // 先把 headByte 剩余部分用掉\n            if(this.headByteRemainBits > 0){\n                bits -= this.headByteRemainBits\n                bigIntResult = bigInt(this.headByte)\n                this.headByteRemainBits = 0\n                this.headByte = 0\n            }\n             \n            // headByte 已用完，开始读取新的字节\n            while(bits >= 8){\n                this.headAddr += 1\n                if(this.headAddr >= this.data.length){\n                    // 文件中已经没有剩余字节了,但还没有读完\n                    return bigInt(-1) // 读取失败\n                }\n                bigIntResult = bigIntResult.add(bigInt(this.data[this.headAddr]).shiftLeft(loadBits - bits))\n                bits -= 8\n            }\n            if(bits > 0){\n                this.headAddr += 1\n                // 剩余位不足一字节的部分\n                // 先读取一字节到 headByte 中\n                if(this.headAddr >= this.data.length){\n                    return bigInt(-1)\n                }\n                this.headByte = this.data[this.headAddr]\n                bigIntResult = bigIntResult.add(bigInt(this.headByte & this.bitsMask[bits]).shiftLeft(loadBits - bits))\n                this.headByteRemainBits = 8 - bits\n                this.headByte = this.headByte >> bits\n            }\n        }\n        return bigIntResult\n\n    },\n    getUintOf:function(bits){\n        return this.getBigIntOf(bits).toJSNumber()\n    },\n    getBit:function(){\n        return this.getBigIntOf(1).toJSNumber()\n    },\n    getByte:function(){\n        return this.getBigIntOf(8).toJSNumber()\n    },\n    getBytes:function(bytes){\n        return this.getBigIntOf(bytes * 8).toJSNumber()\n    },\n    getBytesArray:function(bytes){\n        let res = []\n        for(let i = 0; i < bytes; i++){\n            res.push(this.getByte())\n        }\n        return res\n    },\n    alignToNextByte:function(){\n        if(this.headByteRemainBits > 0){\n            this.headAddr++\n            if(this.headAddr >= this.data.length){\n                this.headByteRemainBits = 0\n            } else {\n                this.headByteRemainBits = 8\n                this.headByte = this.data[this.headAddr]\n            }\n        }\n    }\n}\nexport default fstream","import fstream from \"./fstream\"\n\nconst MAX_BITS = 15\n\nconst _buildHuffmanTree = (tree, nodes, name) => {\n    if(nodes.length === 1){\n        tree.leaf = true\n        tree.value = 1\n        tree.name = nodes[0].alphabet\n        return\n    } \n    tree.leaf = false\n    tree.name = name\n    let lNodes = nodes.filter( node => node.code.startsWith('0') ).map( node => ({\n        alphabet: node.alphabet,\n        code: node.code.slice(1)\n    }))\n    let rNodes = nodes.filter( node => node.code.startsWith('1') ).map( node => ({\n        alphabet: node.alphabet,\n        code: node.code.slice(1)\n    })) \n    tree.children = [{}, {}]\n    if(lNodes.length > 0){\n        tree.leaf = false\n        _buildHuffmanTree(tree.children[0], lNodes, 0)\n    }\n    if(rNodes.length > 0){\n        tree.leaf = false\n        _buildHuffmanTree(tree.children[1], rNodes, 1)\n    }\n}\nconst buildHuffmanTree = (codeLengths) => {\n    let blCount = new Array( MAX_BITS + 1 )\n    blCount.fill(0, 0)\n    codeLengths.forEach(elem => {\n        blCount[elem]++;\n    });\n    //console.log(blCount)\n    let nextCode = new Array( MAX_BITS + 1 )\n    nextCode.fill(0, 0)\n    for(let i = 2; i < nextCode.length; i++){\n        nextCode[i] = (nextCode[i - 1] + blCount[i - 1]) * 2;\n    }\n    //console.log(nextCode)\n    let huffmanNodes = codeLengths.map((elem, idx) => {\n        let c = elem === 0 ? \"\" : (nextCode[elem]++).toString(2)\n        while(c.length < elem){\n            c = \"0\" + c\n        }\n        return { alphabet: idx, code: c }\n    }).filter( elem => elem.code !== '')\n    //console.log(huffmanNodes)\n    let tree = {}\n    //console.log(huffmanNodes)\n    _buildHuffmanTree(tree, huffmanNodes, \"root\")\n    return [tree, huffmanNodes]\n}\n\nexport default buildHuffmanTree","import fstream from \"./fstream\";\nimport buildHuffmanTree from \"./huffman\";\n\nconst decodeCodeLength = (tree, num) => {\n  let res = [];\n  while (res.length < num) {\n    let node = tree;\n    while (!node.leaf) {\n      if (fstream.getBit()) {\n        node = node.children[1];\n      } else {\n        node = node.children[0];\n      }\n    }\n    if (node.name <= 15) {\n      res.push(node.name);\n    } else if (node.name === 16) {\n      let extra = fstream.getUintOf(2) + 3;\n      for (let i = 0; i < extra; i++) {\n        res.push(res[res.length - 1]);\n      }\n    } else if (node.name === 17) {\n      let extra = fstream.getUintOf(3) + 3;\n      for (let i = 0; i < extra; i++) {\n        res.push(0);\n      }\n    } else if (node.name === 18) {\n      let extra = fstream.getUintOf(7) + 11;\n      for (let i = 0; i < extra; i++) {\n        res.push(0);\n      }\n    }\n  }\n  return res;\n};\n\nconst litLengthExtraBits = [\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0,\n];\nconst litLengthExtraStart = [\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67,\n  83, 99, 115, 131, 163, 195, 227, 258,\n];\nconst decodeLitLength = (litLengthTree) => {\n  let node = litLengthTree;\n  let codeBits = 0;\n  while (!node.leaf) {\n    if (fstream.getBit()) {\n      node = node.children[1];\n    } else {\n      node = node.children[0];\n    }\n    codeBits++;\n  }\n  let lettel = node.name;\n  let res = { lit: 0, len: 0, eob: false, codeBits };\n  if (lettel < 256) {\n    res.lit = lettel;\n    res.len = 1;\n  } else if (lettel === 256) {\n    res.eob = true;\n  } else if (lettel > 256 && lettel <= 285) {\n    res.len =\n      litLengthExtraStart[lettel - 257] +\n      fstream.getUintOf(litLengthExtraBits[lettel - 257]);\n    res.codeBits += litLengthExtraBits[lettel - 257];\n  }\n  return res;\n};\n\nconst distExtraBits = [\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13, 0, 0,\n];\nconst distExtraStart = [\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769,\n  1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0,\n];\nconst decodeDist = (distTree) => {\n  let node = distTree;\n  let codeBits = 0;\n  while (!node.leaf) {\n    if (fstream.getBit()) {\n      node = node.children[1];\n    } else {\n      node = node.children[0];\n    }\n    codeBits++;\n  }\n  let letter = node.name;\n  return {\n    dist: distExtraStart[letter] + fstream.getUintOf(distExtraBits[letter]),\n    codeBits: codeBits + distExtraBits[letter],\n  };\n};\n\nconst decodeBlock = (res) => {\n  res.compressedLength = 0;\n  res.uncompressedLength = 0;\n  res.matchLength = 0;\n  res.literalLength = 0;\n  res.averageDist = 0;\n  res.averageLength = 0;\n  res.lengthDistribute = new Array(259);\n  res.lengthDistribute.fill(0, 0);\n  res.distDistribute = new Array(32769);\n  res.distDistribute.fill(0, 0);\n  res.heatMap = {};\n  const heatMapUpdate = (length, dist) => {\n    let key = `_${length}_${dist}`;\n    if (res.heatMap[key]) {\n      res.heatMap[key]++;\n    } else {\n      res.heatMap[key] = 1;\n    }\n  };\n  // 开始解码\n  while (1) {\n    const {\n      lit: lit,\n      len: len,\n      eob: eob,\n      codeBits: lenCodeBits,\n    } = decodeLitLength(res.litLengthTree);\n    if (eob) {\n      break;\n    } else if (len === 1) {\n      res.compressedLength += lenCodeBits;\n      res.uncompressedLength += 8;\n      res.literalLength += 1;\n    } else if (len >= 3) {\n      const { dist, codeBits: distCodeBits } = decodeDist(res.distTree);\n      res.compressedLength += lenCodeBits + distCodeBits;\n      res.uncompressedLength += len * 8;\n      res.matchLength += len;\n      res.lengthDistribute[len]++;\n      res.distDistribute[dist]++;\n      heatMapUpdate(len, dist);\n    }\n  }\n\n  res.averageDist =\n    res.distDistribute.map((v, idx) => v * idx).reduce((a, b) => a + b) /\n    res.distDistribute.reduce((a, b) => a + b);\n\n  res.averageLength =\n    res.lengthDistribute.map((v, idx) => v * idx).reduce((a, b) => a + b) /\n    res.lengthDistribute.reduce((a, b) => a + b);\n};\n\nconst parseNoCompressionBlock = (res) => {\n  res.blockType = \"No Compression Block\";\n  console.log(\"No Compression Block\");\n  fstream.alignToNextByte();\n  res.LEN = fstream.getBytes(2);\n  res.uncompressedLength = res.LEN * 8;\n  res.compressedLength = res.LEN * 8;\n  console.log(res);\n  fstream.getBytes(2);\n  for (let i = 0; i < res.LEN; i++) {\n    fstream.getByte();\n  }\n  return;\n};\n\nlet fixedLitLengthHuffmanCode = undefined;\nlet fixedDistHuffmanCode = undefined;\nlet fixedLitLengthTree = undefined;\nlet fixedDistTree = undefined;\nlet fixedLitLengthCodeLength = [];\nlet fixedDistCodeLength = [];\nconst parseFixedHuffmanBlock = (res) => {\n  res.blockType = \"Fixed Huffman Block\";\n  console.log(\"Fixed Huffman\");\n  if (!fixedLitLengthTree) {\n    // 构造 fixedLitLengthTree\n    for (let i = 0; i <= 287; i++) {\n      if (i <= 143) {\n        fixedLitLengthCodeLength.push(8);\n      } else if (i <= 255) {\n        fixedLitLengthCodeLength.push(9);\n      } else if (i <= 279) {\n        fixedLitLengthCodeLength.push(7);\n      } else {\n        fixedLitLengthCodeLength.push(8);\n      }\n    }\n    let treeRes = buildHuffmanTree(fixedLitLengthCodeLength);\n    fixedLitLengthTree = treeRes[0];\n    fixedLitLengthHuffmanCode = treeRes[1];\n  }\n  if (!fixedDistTree) {\n    for (let i = 0; i <= 31; i++) {\n      fixedDistCodeLength.push(5);\n    }\n    let treeRes = buildHuffmanTree(fixedDistCodeLength);\n    fixedDistTree = treeRes[0];\n    fixedDistHuffmanCode = treeRes[1];\n  }\n\n  res.litLengthHuffmanCode = fixedLitLengthHuffmanCode;\n  res.litLengthCodeLength = fixedLitLengthCodeLength;\n  res.litLengthTree = fixedLitLengthTree;\n  res.distHuffmanCode = fixedDistHuffmanCode;\n  res.distCodeLength = fixedDistCodeLength;\n  res.distTree = fixedDistTree;\n\n  decodeBlock(res);\n};\n\nconst parseDynamicHuffmanBlock = (res) => {\n  res.blockType = \"Dynamic Huffman Block\";\n  console.log(\"Dynamic Huffman\");\n  res.HLIT = fstream.getUintOf(5) + 257;\n  res.HDIST = fstream.getUintOf(5) + 1;\n  res.HCLEN = fstream.getUintOf(4) + 4;\n  // 解码 codeLength 构造 code length tree\n  let hclenOrderMap = [\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,\n  ];\n  let hclenOrdered = new Array(hclenOrderMap.length);\n  hclenOrdered.fill(0, 0);\n  for (let i = 0; i < res.HCLEN; i++) {\n    hclenOrdered[hclenOrderMap[i]] = fstream.getUintOf(3);\n  }\n\n  let treeRes = buildHuffmanTree(hclenOrdered);\n  res.codeLengthTree = treeRes[0];\n  res.codeLengthHuffmanCode = treeRes[1];\n  // 构造 litLengthTree\n  res.litLengthCodeLength = decodeCodeLength(res.codeLengthTree, res.HLIT);\n  treeRes = buildHuffmanTree(res.litLengthCodeLength);\n  res.litLengthTree = treeRes[0];\n  res.litLengthHuffmanCode = treeRes[1];\n  // 构造 distTree\n  res.distCodeLength = decodeCodeLength(res.codeLengthTree, res.HDIST);\n  treeRes = buildHuffmanTree(res.distCodeLength);\n  res.distTree = treeRes[0];\n  res.distHuffmanCode = treeRes[1];\n\n  decodeBlock(res);\n};\n\nconst parseBlock = (res) => {\n  res.BFINAL = fstream.getBit();\n  // for debug\n\n  res.BTYPE = fstream.getUintOf(2);\n  if (res.BTYPE === 0) {\n    parseNoCompressionBlock(res);\n  } else if (res.BTYPE === 1) {\n    parseFixedHuffmanBlock(res);\n  } else if (res.BTYPE === 2) {\n    parseDynamicHuffmanBlock(res);\n  }\n  postMessage({\n    type: \"INFLATE_PROGRESS\",\n    payload: (fstream.headAddr / fstream.data.length) * 100,\n  });\n};\n\nexport default parseBlock;\n","import fstream from \"./fstream\";\nimport moment from \"moment\";\nimport parseBlock from \"./parse_block\";\n\nconst parseHeader = () => {\n  const res = {};\n  try {\n    res.ID1 = fstream.getByte();\n    res.ID2 = fstream.getByte();\n    res.CM = fstream.getByte();\n    res.FLG = {};\n    // 解码 FLG\n    res.FLG.FTEXT = fstream.getBit();\n    res.FLG.FHCRC = fstream.getBit();\n    res.FLG.FEXTRA = fstream.getBit();\n    res.FLG.FNAME = fstream.getBit();\n    res.FLG.FCOMMENT = fstream.getBit();\n    res.FLG.reserved0 = fstream.getBit();\n    res.FLG.reserved1 = fstream.getBit();\n    res.FLG.reserved2 = fstream.getBit();\n    // 解码 MTIME\n    let MTIME = fstream.getBytes(4);\n    res.MTIME = moment(MTIME * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n    // XFL\n    res.XFL = fstream.getByte();\n    // OS\n    let osEnum = [\n      \"FAT filesystem (MS-DOS, OS/2, NT/Win32)\",\n      \"Amiga\",\n      \"VMS (or OpenVMS)\",\n      \"Unix\",\n      \"VM/CMS\",\n      \"Atari TOS\",\n      \"HPFS filesystem (OS/2, NT)\",\n      \"Macintosh\",\n      \"Z-System\",\n      \"CP/M\",\n      \"TOPS-20\",\n      \"NTFS filesystem (NT)\",\n      \"QDOS\",\n      \"Acorn RISCOS\",\n    ];\n    res.OS = fstream.getByte();\n    if (res.OS >= osEnum.length) {\n      res.OS = \"unknown\";\n    } else {\n      res.OS = osEnum[res.OS];\n    }\n    if (res.FLG.FEXTRA === 1) {\n      res.XLEN = fstream.getBytes(2);\n      res.EXTRAFIELD = fstream.getBytesArray(res.XLEN);\n    }\n    if (res.FLG.FNAME === 1) {\n      res.FILENAME = \"\";\n      while (1) {\n        let c = fstream.getByte();\n        if (c === 0) {\n          break;\n        }\n        res.FILENAME = res.FILENAME.concat(String.fromCharCode(c));\n      }\n    }\n    if (res.FLG.FCOMMENT === 1) {\n      res.COMMENT = \"\";\n      while (1) {\n        let c = fstream.getByte();\n        if (c === 0) {\n          break;\n        }\n        res.COMMENT = res.COMMENT.concat(String.fromCharCode(c));\n      }\n    }\n    if (res.FLG.FHCRC === 1) {\n      res.HEADER_CRC16 = fstream.getBytes(2);\n    }\n    \n  } catch {\n      res.error = true\n  }\n  return res;\n};\n\nconst parseBlocks = () => {\n  let res = [];\n\n  while (1) {\n      let block = {};\n      try {\n        parseBlock(block)\n      } catch {\n        block.error = true\n      } \n      res.push(block);\n      if (block.BFINAL || block.error) {\n        break;\n      }\n    }\n\n  return res;\n};\n\nconst parseTrailer = () => {\n  fstream.alignToNextByte();\n  let res = {\n    CRC32: fstream.getBytes(4),\n    ISIZE: fstream.getBytes(4),\n  };\n  return res;\n};\n\nconst parseMember = () => {\n  let res = {\n    error:false,\n    header: parseHeader(),\n    blocks: parseBlocks(),\n    trailer: parseTrailer(),\n  };\n  res.error = (!!res.header.error) || (res.blocks.length === 0 || res.blocks[res.blocks.length - 1].error)\n  // 全局统计数据\n  res.header.uncompressedLength = res.blocks.map(b => b.uncompressedLength).reduce((a, b) => a + b)\n  res.header.compressedLength = res.blocks.map(b => b.compressedLength).reduce((a, b) => a + b)\n  let compressedBlocks = res.blocks.filter( b => (!b.error && (b.BTYPE !== 0)))\n  res.header.matchLength = compressedBlocks.map(b => b.matchLength).reduce((a, b) => a + b)\n  res.header.literalLength = compressedBlocks.map(b => b.literalLength).reduce((a, b) => a + b)\n  res.header.averageDist = compressedBlocks.map(b => b.averageDist).reduce((a, b) => a + b) / compressedBlocks.length\n  res.header.averageLength = compressedBlocks.map(b => b.averageLength).reduce((a, b) => a + b) / compressedBlocks.length \n  return res;\n};\n\nconst inflate = function (inputFileData) {\n  fstream.init(inputFileData);\n  let res = [];\n  while (!fstream.eof()) {\n    let m = parseMember()\n    res.push(m)\n    if(m.error){\n        break\n    }\n  }\n  return res;\n};\n\nexport { inflate };\n","import { inflate } from './inflate'\n\nonmessage = (e) => {\n\n    if(e.data.type === 'OPEN_FILE'){\n        postMessage({\n            type:'INFLATE_RESULT',\n            payload:inflate(e.data.payload)\n        })\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [923], function() { return __webpack_require__(6598); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"453f35c0\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/gzip-analyzer/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t598: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkgzip_analyzer\"] = self[\"webpackChunkgzip_analyzer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(923).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["data","Uint8Array","headAddr","headByte","headByteRemainBits","init","console","log","this","reset","eof","length","bitsMask","getBigIntOf","bits","bigIntResult","bigInt","loadBits","add","shiftLeft","getUintOf","toJSNumber","getBit","getByte","getBytes","bytes","getBytesArray","res","i","push","alignToNextByte","_buildHuffmanTree","tree","nodes","name","leaf","value","alphabet","lNodes","filter","node","code","startsWith","map","slice","rNodes","children","codeLengths","blCount","Array","MAX_BITS","fill","forEach","elem","nextCode","huffmanNodes","idx","c","toString","decodeCodeLength","num","fstream","extra","litLengthExtraBits","litLengthExtraStart","decodeLitLength","litLengthTree","codeBits","lettel","lit","len","eob","distExtraBits","distExtraStart","decodeDist","distTree","letter","dist","decodeBlock","compressedLength","uncompressedLength","matchLength","literalLength","averageDist","averageLength","lengthDistribute","distDistribute","heatMap","heatMapUpdate","key","lenCodeBits","distCodeBits","v","reduce","a","b","fixedLitLengthHuffmanCode","undefined","fixedDistHuffmanCode","fixedLitLengthTree","fixedDistTree","fixedLitLengthCodeLength","fixedDistCodeLength","BFINAL","BTYPE","blockType","LEN","parseNoCompressionBlock","treeRes","buildHuffmanTree","litLengthHuffmanCode","litLengthCodeLength","distHuffmanCode","distCodeLength","parseFixedHuffmanBlock","HLIT","HDIST","HCLEN","hclenOrderMap","hclenOrdered","codeLengthTree","codeLengthHuffmanCode","parseDynamicHuffmanBlock","postMessage","type","payload","parseHeader","ID1","ID2","CM","FLG","FTEXT","FHCRC","FEXTRA","FNAME","FCOMMENT","reserved0","reserved1","reserved2","MTIME","moment","format","XFL","osEnum","OS","XLEN","EXTRAFIELD","FILENAME","concat","String","fromCharCode","COMMENT","HEADER_CRC16","error","parseBlocks","block","parseBlock","parseMember","header","blocks","trailer","CRC32","ISIZE","compressedBlocks","inflate","inputFileData","m","onmessage","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","nmd","paths","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}